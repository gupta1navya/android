CREATE DATABASE COMPANY_DB;
USE COMPANY_DB;
CREATE TABLE EMPLOYEE(
	Eno	          CHAR(3)       NOT NULL,
	Ename         VARCHAR(50)   NOT NULL,
	Job_type      VARCHAR(50)   NOT NULL,
	SupervisorEno CHAR(3)       DEFAULT NULL,
	Hire_date     DATE          NOT NULL,
	Dno           INT           DEFAULT NULL,
	Commission    DECIMAL(10,2) DEFAULT NULL,
	Salary        DECIMAL(7,2)  NOT NULL,
	PRIMARY KEY (Eno)
);

CREATE TABLE DEPARTMENT(
	Dno      INT         NOT NULL,
	Dname    VARCHAR(50) DEFAULT NULL,
	Location VARCHAR(50) DEFAULT 'New Delhi',
	PRIMARY KEY (Dno)
);

ALTER TABLE EMPLOYEE
	ADD CONSTRAINT Supervisor_Constraint
		FOREIGN KEY (SupervisorEno) REFERENCES EMPLOYEE(Eno);

ALTER TABLE EMPLOYEE
	ADD CONSTRAINT DepartmentNo_Constraint
		FOREIGN KEY (Dno) REFERENCES DEPARTMENT(Dno);

INSERT INTO DEPARTMENT VALUES (10,'HEADQUARTERS','Noida');
INSERT INTO DEPARTMENT VALUES (20,'SECURITY', 'Bengaluru');
INSERT INTO DEPARTMENT VALUES (50,'PURCHASE', 'Noida');
INSERT INTO DEPARTMENT VALUES (60,'MARKETING', 'Mumbai');
INSERT INTO DEPARTMENT VALUES (70,'SALES', 'Dallas');
INSERT INTO DEPARTMENT VALUES (72,'Blake', 'Dallas');
INSERT INTO DEPARTMENT VALUES (80,'IT', 'Dallas');
INSERT INTO DEPARTMENT (Dno, Dname) VALUES (30, 'EXECUTIVE');
INSERT INTO DEPARTMENT (Dno, Dname) VALUES(40, 'ACCOUNTANCY');
Select * from DEPARTMENT;

Select * from EMPLOYEE;
INSERT INTO EMPLOYEE VALUES ('101', 'SHUBHANG GUPTA', 'Senior Security Engineer', '778', '18-MAY-1980', 20, 2000.00, 8000.00);
INSERT INTO EMPLOYEE VALUES ('102', 'ANMOL GUPTA', 'Junior Security Engineer', '101', '11-AUG-1981', 20, 1000.00, 5000.00);
INSERT INTO EMPLOYEE VALUES ('103', 'KUSHAN THAKUR', 'Chief Operating Officer', '778', '21-APR-1981', 30, 2000.00, 5000.00);
INSERT INTO EMPLOYEE VALUES ('104', 'KUNAL GIRI', 'Operating Officer', '103', '30-SEP-1985', 30, 1000.00, 4000.00);
INSERT INTO EMPLOYEE VALUES ('778', 'ANKUR KUMAR', 'Managing Director', NULL, '01-NOV-1972', 10, 2000.00, 6000.00);
INSERT INTO EMPLOYEE VALUES ('106', 'LIPSA PRAHARAJ', 'Accountant', '778', '1-DEC-1979', 40, 2000.00, 7000.00);
INSERT INTO EMPLOYEE VALUES ('107', 'DEVASHISH TYAGI', 'Accountant Intern', '106', '28-JUNE-1981', 40, NULL, 800.00);
INSERT INTO EMPLOYEE VALUES ('108', 'RAHUL SAHAY', 'Security Intern', '102', '19-JULY-1990', 20, NULL, 900.00);
INSERT INTO EMPLOYEE VALUES ('109', 'TANIA CHAUHAN', 'Executive Intern', '104', '22-MAY-1989', 30, NULL, 800.00);
INSERT INTO EMPLOYEE VALUES ('79', 'SANYEM NAZKANI', 'Human Resource (HR)', NULL, '1-APRIL-1987', 10, 1000.00, 5000.00);
INSERT INTO EMPLOYEE VALUES ('110', 'ALICIA JONES', 'Purchase Manager', '778', '26-OCT-1982', 50, 1452.40, 7500.35);
INSERT INTO EMPLOYEE VALUES ('111', 'ANAMIKA GHAI', 'Accountant Intern', '106', '28-JUNE-1981', 40, NULL, 800.00);
INSERT INTO EMPLOYEE VALUES ('112', 'AMARTYA SHARMA', 'Security Intern', '102', '19-JULY-1990', 20, NULL, 900.00);
INSERT INTO EMPLOYEE VALUES ('113', 'SAMEER', 'Executive Intern', '104', '22-MAY-1989', 30, NULL, 800.00);
INSERT INTO EMPLOYEE VALUES ('114', 'DUSHYANT KUMAR', 'Sales Director', NULL, '1-APRIL-1987', 70, 1000.00, 7500.35);
INSERT INTO EMPLOYEE VALUES ('120', 'PIYUSH CHAWLA', 'Sales Director', NULL, '1-APRIL-1987', 70, 900.00, 7000.35);
INSERT INTO EMPLOYEE VALUES ('115', 'LAKSHYA SHARMA', 'SDE Manager', '778', '26-OCTOBER-1982', 80, 1500.00, 8000.35);
INSERT INTO EMPLOYEE VALUES ('116', 'RODRICK HAIGHTON', 'Graphic Designer', '115', '8-MAY-2000', 80, 1000.00, 2027.74);
INSERT INTO EMPLOYEE VALUES ('117', 'NINA FISBY', 'Systems Administrator', '115', '26-JULY-2017', 80, 524.39, 1920.84);
INSERT INTO EMPLOYEE VALUES ('118', 'SKELL WOOLERTON', 'Software Test Engineer', '115', '4-APRIL-2004', 80, 900.86, 2027.74);
INSERT INTO EMPLOYEE VALUES ('119', 'King Jeorge', 'Software Test Engineer', '115', '4-APRIL-2004', 80, 900.86, 2027.74);
INSERT INTO EMPLOYEE VALUES ('777', 'JS KING', 'Software Test Engineer', '115', '4-APRIL-2006', 80, 900.86, 2027.74);
INSERT INTO EMPLOYEE VALUES ('779', 'JS KING', 'Software Test Engineer', '115', '4-APRIL-2006', 80, 900.86, 2027.74);
INSERT INTO EMPLOYEE VALUES ('133', 'LAKSHYA ', 'SDE Manager', '119', '26-OCTOBER-1982', 80, 1450.00, 800.35);
INSERT INTO EMPLOYEE VALUES ('152', 'ROHIT', 'Graphic Designer', '119', '8-MAY-2000', 80, 980.00, 6527.74);
INSERT INTO EMPLOYEE VALUES ('131', 'RAM LAL', 'Systems Administrator', '119', '26-JULY-2017', 80, 724.39, 5520.84);
INSERT INTO EMPLOYEE VALUES ('121', 'RIVY BUZEK', 'Help Desk Technician', NULL, '25-MAY-1982', 80, NULL, 1095.31);
INSERT INTO EMPLOYEE VALUES ('122', 'BLAKE LEWIS', 'Backend Developer', '115', '25-MAY-1989', 80, 1200.00, 5500.00);
INSERT INTO EMPLOYEE VALUES ('123', 'BRANDTR WILDBORE', 'Software Test Engineer', '115', '14-APRIL-2000', 80, NULL, 2704.23);
INSERT INTO EMPLOYEE VALUES ('126', 'GANNIE QUANTRELL', 'Automation Engineer', '115', '29-APRIL-2019', 80, NULL, 3174.12);
INSERT INTO EMPLOYEE VALUES ('127', 'FRAN LENING', 'Analyst Programmer', '115', '27-MAY-1981', 80, NULL, 2471.17);
INSERT INTO EMPLOYEE VALUES ('500', 'GUSTAV WARING', 'Software Engineer', '115', '23-DEC-2002', 80, NULL, 3141.05);
INSERT INTO EMPLOYEE VALUES ('134', 'VIRGE SWANCOTT', 'Web Developer', '115', '21-JAN-1984', 80, NULL, 3292.48);
INSERT INTO EMPLOYEE VALUES ('135', 'LEE PRATTIN', 'Frontend Developer', '115', '23-JAN-1986', 80, NULL, 2296.48);
INSERT INTO EMPLOYEE VALUES ('136', 'MAG GIACOMO', 'Frontend Developer', '115', '12-JAN-2002', 80, NULL, 2427.98);
INSERT INTO EMPLOYEE VALUES ('137', 'CHANDAL BRIER', 'Software Consultant', '115', '10-FEB-1998', 80, NULL, 1697.68);
INSERT INTO EMPLOYEE VALUES ('138', 'MARTHA ANNIES', 'Web Developer', '115', '3-FEB-2008', 80, NULL, 3200.80);
INSERT INTO EMPLOYEE VALUES ('139', 'SELESTINA HERRIES', 'Software Engineer', '115', '23-MAY-2013', 80, NULL, 2239.27);
2 


UPDATE EMPLOYEE SET SupervisorEno = NULL WHERE Eno = '114';
ALTER TABLE EMPLOYEE DROP CONSTRAINT DepartmentNo_Constraint;
ALTER TABLE EMPLOYEE DROP CONSTRAINT Supervisor_Constraint;
UPDATE DEPARTMENT SET Dname = 'PURCHASE' WHERE Dno = 50;

1. SELECT Eno, Ename, Job_type, Hire_date FROM EMPLOYEE;
2. SELECT DISTINCT Job_type FROM EMPLOYEE;
3. SELECT Ename||','||Job_type as "Employee_Name + Job_Type" FROM EMPLOYEE;
4. SELECT Eno||','|| Ename||','|| Job_type||','|| SupervisorEno||','|| Hire_date||','|| Dno||','|| Commission||','||Salary AS "THE_OUTPUT" FROM EMPLOYEE;
5. SELECT Ename,Salary FROM EMPLOYEE WHERE Salary > 2850.00;
6. SELECT Ename,Dno FROM EMPLOYEE WHERE Eno = 79;
7. SELECT Ename,Salary FROM EMPLOYEE WHERE Salary < 1500 OR Salary > 2850;
8. SELECT Ename,Dno FROM EMPLOYEE WHERE Dno = 10 OR Dno = 30 ORDER BY Ename;
9. SELECT Ename,Hire_date FROM EMPLOYEE WHERE (Hire_date) LIKE '%81';                 ----EROR-----------
10. SELECT Ename,Job_type FROM EMPLOYEE WHERE SupervisorEno IS NULL;
11. SELECT Ename,Job_type FROM EMPLOYEE WHERE Commission != 0.00;
12. SELECT * FROM EMPLOYEE ORDER BY Salary DESC, Commission DESC;
13. SELECT Ename FROM EMPLOYEE WHERE Ename LIKE '__A%';
14. SELECT Ename FROM EMPLOYEE WHERE (Ename LIKE '%L%L%' or Ename LIKE '%A%A%') AND (Dno = 30 or SupervisorEno = 7788);
15. SELECT Ename, salary, commission FROM EMPLOYEE WHERE commission > salary + salary * 0.05;
16. SELECT TO_CHAR(SYSDATE, ' MONTH DD, YYYY, DAY') AS current_date_day FROM EMPLOYEE;

SELECT CONCAT(CAST(GETDATE() AS DATE), ', ', DATENAME(dw, GETDATE())) AS Date_Day FROM EMPLOYEE;  //////Error  //
-- CAST Syntax:  
-- CAST ( expression AS data_type [ ( length ) ] )

17. SELECT Ename, Hire_date, ADD_MONTHS(Hire_date,6) AS review_date,
    NEXT_DAY(ADD_MONTHS(Hire_date,6) - 1,'MONDAY') AS salary_review_date FROM EMPLOYEE;
18. SELECT Ename, MONTHS_BETWEEN(SYSDATE, Hire_date) AS month_since_hire FROM EMPLOYEE E, DEPARTMENT D where D.Dname = 'PURCHASE';    ////Correct //

SSELECT Ename,DATEDIFF(month, Hire_date, GETDATE())                    /////////////ERROR????????????
    CASE WHEN DATEPART(day, Hire_date) > DATEPART(day, GETDATE()) THEN 1
	ELSE 0 
    END	AS Months FROM EMPLOYEE, DEPARTMENT WHERE EMPLOYEE.Dno = DEPARTMENT.Dno AND Dname = 'PURCHASE';

19. SELECT Ename||' earns '|| Salary||' monthly but wants '|| 3*Salary AS "Dream_Salary" FROM EMPLOYEE;
20. SELECT INITCAP(Ename) As Names, 
      LENGTH(Ename) AS NameLength FROM EMPLOYEE
      WHERE Ename LIKE 'J%' OR Ename LIKE 'A%' OR Ename LIKE 'M%';
21. SELECT Ename, Hire_date, TO_CHAR(Hire_date,'Day') AS Day_Of_week FROM EMPLOYEE;
22. SELECT Ename,Dname,DEPARTMENT.Dno FROM EMPLOYEE, DEPARTMENT WHERE EMPLOYEE.Dno = DEPARTMENT.Dno;
23. SELECT DISTINCT Job_type FROM EMPLOYEE WHERE Dno = 30;
24. SELECT E.Ename, D.Dname FROM EMPLOYEE E, DEPARTMENT D WHERE Ename LIKE '%A%' AND E.Dno = D.Dno;
25. SELECT Ename,Job_type,D.Dno,D.Dname FROM EMPLOYEE E, DEPARTMENT D WHERE Location LIKE 'Dallas' AND E.Dno = D.Dno;
26. SELECT Eno, Ename, SupervisorEno,
	   (SELECT Ename FROM EMPLOYEE E2 WHERE E1.SupervisorEno = E2.Eno) AS Supervisor_Name FROM EMPLOYEE E1;
27. SELECT E1.Ename,E1.Dno, E1.Salary FROM EMPLOYEE E1, EMPLOYEE E2 WHERE E1.Dno = E2.Dno AND E1.Salary = E2.Salary AND 
     E1.Ename <> E2.Ename AND E2.Commission IS NOT NULL;
28. Select Ename,RPAD('*',salary/100,'*') as Salary_Star from EMPLOYEE;
29. SELECT MAX(Salary) AS Highest,MIN(Salary) AS Lowest, SUM(Salary) AS Sum, AVG(Salary) AS Average FROM EMPLOYEE;
30. SELECT Job_type, COUNT(Job_type) AS COUNT FROM EMPLOYEE GROUP BY Job_type;
31. SELECT COUNT(DISTINCT SupervisorEno) AS Total_Supervisors FROM EMPLOYEE;
32. SELECT Dname,Location, COUNT(Eno) AS No_of_Employees, AVG(Salary) AS Average_Salary FROM EMPLOYEE E, DEPARTMENT D
         WHERE E.Dno = D.Dno GROUP BY Dname, Location;
33. SELECT E1.Ename,E1.Hire_date FROM EMPLOYEE E1 WHERE E1.Dno = (SELECT E2.Dno FROM EMPLOYEE E2 WHERE E2.Ename LIKE 'BLAKE%');
34. SELECT Eno,Ename FROM EMPLOYEE WHERE Salary > (SELECT AVG(Salary) FROM EMPLOYEE);
35. SELECT Eno,Ename FROM EMPLOYEE WHERE Dno IS NOT NULL AND Ename LIKE '%T%';
36. SELECT Ename,Salary FROM EMPLOYEE WHERE SupervisorEno = (SELECT Eno FROM EMPLOYEE WHERE Ename LIKE 'King%');
37. SELECT E.Dno, E.Ename, Job_Type FROM EMPLOYEE E, DEPARTMENT D WHERE E.Dno = D.Dno AND D.Dname LIKE 'SALES%';
38. SELECT Ename, Dname FROM EMPLOYEE E JOIN DEPARTMENT D ON E.Dno = D.Dno WHERE MONTHS_BETWEEN(SYSDATE,Hire_date)>=20*12;
39. SELECT Location,COUNT(*) AS TOTAL_DEPTS FROM DEPARTMENT GROUP BY Location;
40. SELECT Dname FROM EMPLOYEE E INNER JOIN DEPARTMENT D ON E.Dno = D.Dno GROUP BY D.Dname HAVING COUNT(*) >= 20;

41. ////select Ename from employee where eno not in (select distinct SuperviserEno from employee where SuperviserEno is not NULL) union select Ename from employee where eno in (select SuperviserEno from employee group by SuperviserEno having count(*) > 2);



SELECT E.Eno, E.Ename FROM EMPLOYEE E  WHERE Eno NOT IN (SELECT SupervisorEno FROM EMPLOYEE WHERE SupervisorEno IS NOT NULL) OR 
E.Eno IN ( SELECT SupervisorEno FROM EMPLOYEE GROUP BY SupervisorEno HAVING COUNT(*) > 5);


42. SELECT Job_type, COUNT(*) AS Count FROM EMPLOYEE GROUP BY Job_type
HAVING COUNT(*) IN(
    (
        SELECT MAX(ECount) FROM (SELECT COUNT(*) AS ECount FROM EMPLOYEE GROUP BY Job_type) AS E1
    )
    UNION
    (
        SELECT MIN(Count) FROM (SELECT COUNT(*) AS Count FROM EMPLOYEE GROUP BY Job_type) AS E1;
    )
);


SELECT Job_type,COUNT(*) AS EMP_COUNT FROM EMPLOYEE GROUP BY Job_type  
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) AS employee_count FROM EMPLOYEE GROUP BY Job_type) OR COUNT(*) = (SELECT MIN(COUNT(*)) AS employee_count FROM EMPLOYEE GROUP BY Job_type);

SELECT Job_type,COUNT(*) AS EMP_COUNT FROM EMP GROUP BY Job_type 
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) AS employee_count FROM EMPLOYEE GROUP BY Job_type) OR COUNT(*) = (SELECT MIN(COUNT(*)) AS employee_count FROM EMPLOYEE GROUP BY Job_type);



SELECT Job_type,COUNT(*) AS Count FROM EMPLOYEE GROUP BY Job_type //////////// error ???????????????
HAVING COUNT(*) IN ((SELECT MAX(ECount) FROM (SELECT COUNT(*) AS ECount FROM EMPLOYEE GROUP BY Job_type) AS E1)
    UNION(SELECT MIN(ECount) FROM (SELECT COUNT(*) AS ECount FROM EMPLOYEE GROUP BY Job_type)AS E2));




SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;
drop table EMPLOYEE;
DROP table DEPARTMENT;

